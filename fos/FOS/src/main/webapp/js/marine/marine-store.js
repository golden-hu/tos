FConsign = HTUtil.createRecord([
    'consNo','consBizClass','consBizType','consShipType','consLclType',
	{name:'consMasterFlag',type:'boolean',convert:function(v){return v==1;}},
	'consMasterId','consMasterNo','consRefNo','consContractNo','consSource',
	{name:'consDate',type:'date',dateFormat:DATEF},
	'consSalesRepId','consSalesRepName','consOperatorId','consOperatorName',
	'consCreditNo','consInsuranceFee','custId',
	'custName','custSname','custContact','custTel','custFax','custSalesId',
	'custSalesName','consOverseaAgency','consOverseaAgencyName',
	'consShipper','consConsignee','consNotifyParty','consNotifyParty2',
	'consFShipper','consFConsignee','consFNotifyParty',
	'consPolEn','consPodEn','consPotEn','consPolCode','consPodCode','consPotCode',
	'consReceiptPlace','consDeliveryPlace','consBVessel','consBVoyage','consBPodEn',
	'consDestination','consTranCountry','consTradeCountry',
	'consHarbour','consCargoOwner','consCargoOwnerName','consCfs','consCfsName','consWarehouseNo',
	'consWarehouse','consWarehouseContact','consWarehouseName','consWarehouseTel','consWarehouseAddress','consWarehouseRemarks',
	{name:'consContainerLoadDate',type:'date',dateFormat:DATEF},
	'consContainerCompany','consContainerCompanyName','consCustomsVendor','consCustomsVendorName',
	'consInspectionVendor','consInspectionVendorName',
	'consTrackVendor','consTrackVendorName','consTrackContact','consTrackTel',
	{name:'consLoadDate',type:'date',dateFormat:DATEF},
	'consLoadFactory','consLoadContact','consLoadTel',
	'consLoadAddress','consLoadRemarks','consDoAgency','consDoAgencyName',
	'consBookingAgency','consBookingAgencyContact','consBookingAgencyTel','consBookingAgencyName','consBookingAgencySname',
	{name:'consBookingDate',type:'date',dateFormat:DATEF},'consBookingContractNo',
	'consSoNo','consPrecarriage','consCarrier','consCarrierCode','consCarrierName',
	'vessName','vessNameCn','voyaId','voyaName','consPackingListNo',
	{name:'consEtd',type:'date',dateFormat:DATEF},
	{name:'consEta',type:'date',dateFormat:DATEF},
	{name:'consRecvDate',type:'date',dateFormat:DATEF},
	{name:'consShipDate',type:'date',dateFormat:DATEF},
	{name:'consExpiryDate',type:'date',dateFormat:DATEF},
	{name:'consDeliveryDate',type:'date',dateFormat:DATEF},	
	{name:'consSailDate',type:'date',dateFormat:DATEF},
	{name:'consBlIssueDate',type:'date',dateFormat:DATEF},
	{name:'consChangeDate',type:'date',dateFormat:DATEF},
	'consMblNo','consHblNo','consScacCode',
	'consCargoDesc','consCargoMarks','consSendSingleAddress',
	'consCargoNameEn','consCargoNameCn','consCargoSpecial','consTotalPackages','consTotalPackagesInWord',
	{name:'consTotalGrossWeight',type:'float'},
	{name:'consTotalNetWeight',type:'float'},	
	{name:'consTotalMeasurement',type:'float'},
	'consTotalContainers',
	{name:'consTotalChargeWeight',type:'float'},
	'consContainersTeu',
	'consContainersNo',
	'consContainersInfo',
	'consSealNo',	
	'blCargoPackages',
	{name:'blCargoGrossWeight',type:'float'},	
	{name:'blCargoNetWeight',type:'float'},
	{name:'blCargoMeasurement',type:'float'},	
	{name:'cargBigFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'cargReeterFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'cargDanagerFlag',type:'boolean',convert:function(v){return v==1;}},
	'unitCode','unitCodeCarrier','packName','coclName','caclName','trtyName','trteIName',
	'tranCode','tranCodeCarrier',
	'pateCode','pateCodeCarrier',
	'istyId','shliId','shliCode','swithId',
	'consBlIssuePlace','consBlRemarks','consPaidAt',
	{name:'consTransFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'consPartialFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'consFumigateFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'consQuarantineFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'consTransferringFlag',type:'boolean',convert:function(v){return v==1;}},	
	{name:'consShutoutFlag',type:'boolean',convert:function(v){return v==1;}},	
	'consOriginalBlNum','consCopyBlNum','consRemarks','consBookingRemarks',
	'consServiceRequired','consServiceSpec','consSplitNo','consShipCode',
	'consSplitContact','consSplitTel','consSplitConsignee',
	'consSplitConsigneeTel','consStatus','consStatusExp',	
	'consStatusAr','consStatusAp','consStatusInvoR',
	'consStatusInvoP','consStatusAud','consStatusLock',
	'consChargeRemarks','consBookingDeclareNoUs','consUsFullShip',
	'consCancelReason','consBookingCancelReason','consCudeType',
	{name:'consInvoiceFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'consInspectionFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'consVerificationFlag',type:'boolean',convert:function(v){return v==1;}},
	'consVerificationNo','consBulkyCarrier','consBulkyCustomer','consChargeWeightCarrier',
	'consChargeWeightCustomer','consTotalGrossWeightCustomer','consTotalMeasurementCustomer',
	'wconId','consWsFlag','consWsAcceptFlag','grouId','grouName',
	'attr1','attr2','attr3','attr4',
	{name:'consExternalFlag',type:'boolean',convert:function(v){return v==1;}},
	'consCompany','consCustomsDeclarationNo',
	{name:'consCloseDate',type:'date',dateFormat:DATEF},
	{name:'consCustomsDeclarDate',type:'date',dateFormat:DATEF},
	'consCustomsDeclarTime','sumR','sumP','grossProfit','grossProfitRate','sumRUsd',
	'sumRUsdInvoice','sumRUsdWriteOff','sumRCny',
	'sumRCnyInvoice','sumRCnyWriteOff','sumPUsd','sumPUsdInvoice','sumPUsdWriteOff',
	'sumPCny','sumPCnyInvoice','sumPCnyWriteOff','editable'
	]);
FBl = HTUtil.createRecord(['blNo','blType','consId','consNo','consMasterId','consMasterNo',
	'consBizClass','consBizType','consShipType','consContractNo','consChargeRemarks',
	'custId','custName','blShipper','blConsignee','blNotifyParty','blNotifyParty2',
	'blOverseaAgency','blGrossWeight','blMeasurement','blPackages',
	'blPrecarriage','blCarrier','blCarrierName','blVessel','blVoyage','blPol','blPod','blPot',
	{name:'blLoadDate',type:'date',dateFormat:'Y-m-d'},
	{name:'blEtd',type:'date',dateFormat:'Y-m-d'},
	{name:'blEta',type:'date',dateFormat:'Y-m-d'},
	'blReceiptPlace','blDeliveryPlace','blContainersNo',	
	'blCargoDesc',
	'blTotalSay',
	'blCargoMarks','packName','unitName',
	'blCargoGrossWeight',
	'blCargoNetWeight',
   'blCargoMeasurement',
    'blCargoPackages',
    'blPaymentTerm',
    'blPaidAt','blTransTerm','blContainersInfo','blOriginalNum',
    'istyId','blIssueBy',{name:'blIssueDate',type:'date',dateFormat:DATEF},'blIssuePlace','blRemarks',
    'blReceiver',	
	{name:'blThirdPlaceFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'blAdvancedFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'blBackFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'blCleanFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'bl500Flag',type:'boolean',convert:function(v){return v==1;}},
	'blReleaseBy',{name:'blReleaseDate',type:'date',dateFormat:DATEF},'blReleaseRemarks',
	'blStatus',
	'blAgentIataCode','blAccountNo','blAccountingInfo','blToFirst','blByFirst','blToSecond','blBySecond',
	'blToThird','blByThird','currCode','blWeightPayment','blValuePayment',
	'blOtherPayment','blDvCarriage','blDvCustoms','blAmountInsurance','blTsRemarks',
	'blDimension','blHandlingInfo','blBookingRequirement','blRateClass',
	'blChargeWeight','blChargeRate','blTotalCharge','blWeightChargePp','blWeightChargeCc',
	'blValuationChargePp','blValuationChargeCc',
	'blTaxPp','blTaxCc','blOtherDaPp','blOtherDaCc','blOtherDcPp','blOtherDcCc','blTotalPp','blTotalCc',
	{name:'blMergeFlag',type:'boolean',convert:function(v){return v==1;}},	
	{name:'blSplitFlag',type:'boolean',convert:function(v){return v==1;}},
	{name:'blMasterFlag',type:'boolean',convert:function(v){return v==1;}},
	'blMBlId','blMBlNo']);
FBlExpense = HTUtil.createRecord([
    'consId','consMblNo','consExpenseName','consExpenseNum','consExpensePrice','consExpenseTotal']);
FContainer = HTUtil.createRecord([
 	'consId','consNo','contMasterId','contMasterNo','contPreFlag','contPartOfFlag',
 	'contNo',{name:'contNum',type:'int'},'contSealNo','contSealNo2','contSealNo3',
 	'cotyId','contFl','packName','contPackageNum','contCargoNameEn','contCargoNameCn','contGrossWeight',
 	'contMeasurement','contSocFlag',{name:'contLoadDate',type:'date',dateFormat:DATEF},'contRemarks',
 	'cargTemperature','cargDanagerClass','cargFlashPoint','cargImdgPage','cargUnNo',
 	'contVessel','contVoyage','contPol','contPod','contDeliveryPlace']);
FContainerCargo = HTUtil.createRecord(['consId','consNo','contId',
  	'contNo','consMblNo','consHblNo','consCustName','cargId',
  	'packName','cocaMarks','cocaCargoName','cocaPackageNum','cocaGrossWeight','cocaMeasurement']);
FCargo = HTUtil.createRecord([
	'consId','consNo','consMasterId','consMasterNo','consMblNo','consHblNo','cargContStatus',
	'cargMarks','cargNameEn','cargNameCn','cargManuNo','cargSpec','cargNo','consCustName',
	'packName','packNameS','unitName',{name:'cargPackageNum',type:'float'},
	{name:'cargPackageSNum',type:'float'},
	{name:'cargNetWeight',type:'float'},
	{name:'cargGrossWeight',type:'float'},
	{name:'cargMeasurement',type:'float'},
	{name:'cargMeasurementCustomer',type:'float'},
	{name:'cargGrossWeightCustomer',type:'float'},
	'cargBigFlag','cargLength','cargWidth','cargHigh',
	'cargReefterFlag','cargTemperature','cargTemperatureUnit','cargTemperatureLow',
	'cargTemperatureHigh','cargHumidity','cargVentOutlet',
	'cargDanagerFlag','cargDanagerClass','cargPollutionFlag','cargDanagerProperty',
	'cargImdgPage','cargSubLabel','cargUnNo','cargFlashPoint','cargMfagNo','cargEmsNo',
	'cargPkgGroup','cargEmgTel','cargQuitFlag','cargCudeType']);	
GMarineType = HTUtil.createRecord([
    'marineTypeName','remarks'                             
]);

var HTStore_M = {
		getNameById : function(store,v){
			if(Ext.isEmpty(v))
				return '';
			else{
				return store.getById(v).get('NAME');
			}
		},
		createStore:function(storeId,actionCode,typeName,recordType,bp){
			 var store = new Ext.data.Store({storeId:storeId,url:SERVICE_URL,baseParams:Ext.isEmpty(bp)?{_A:actionCode,_mt:'json'}:bp,
				reader:new Ext.data.JsonReader({totalProperty:'rowCount',root:typeName,id:'id'},recordType),
				remoteSort:true,sortInfo:{field:'id', direction:'desc'}});
			 store.load();
			 return store;
		},
		//海运业务类型
		getMarineType:function(){
			var store = this.createStore('MARINE_TYPE_S','MARINE_TYPE_Q','GMarineType',GMarineType);
			store.load();
			return store;
		},
		MARINE_TYPE_S : new Ext.data.ArrayStore({id:0,fields:['CODE','NAME'],
			data:[['E','出口'],['I','进口'],['D','内贸']]}),
		getMARINE_TYPE : function(v){return HTStore_M.getNameById(HTStore_M.MARINE_TYPE_S,v);},
		
		SHIP_TYPE_S : new Ext.data.ArrayStore({id:0,fields:['CODE','NAME'],
			data:[['FCL','整箱'],['LCL','拼箱'],['BULK','散货']]}),
		getSHIP_TYPE : function(v){return HTStore_M.getNameById(HTStore_M.SHIP_TYPE_S,v);}
};

